{
  "name": "vscode-ruleengine-editor",
  "displayName": "Rule Engine Editor",
  "description": "Pipeline editor for javascript",
  "author": "Nikolay Naumenkov <nikolas.it.web@gmail.com>",
  "license": "SEE LICENSE IN LICENSE",
  "version": "0.0.2",
  "homepage": "https://github.com/ruleenginejs/vscode-ruleengine-editor",
  "bugs": {
    "url": "https://github.com/ruleenginejs/vscode-ruleengine-editor/issues",
    "email": "nikolas.it.web@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ruleenginejs/vscode-ruleengine-editor.git"
  },
  "publisher": "ruleengine",
  "keywords": [
    "rule engine",
    "ruleengine",
    "rule editor",
    "pipeline editor",
    "rule",
    "pipeline",
    "javascript"
  ],
  "engines": {
    "vscode": "^1.63.0"
  },
  "categories": [
    "Other"
  ],
  "icon": "images/logo.png",
  "activationEvents": [
    "onView:ruleengine.inpsectorView",
    "onCustomEditor:ruleengine.ruleEditor",
    "onCommand:ruleengine.ruleEditor.newFile"
  ],
  "main": "./dist/extension.js",
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": true
    },
    "virtualWorkspaces": true
  },
  "contributes": {
    "configuration": [
      {
        "title": "Rule Engine Editor",
        "properties": {
          "ruleengine.ruleEditor.inspector.autoReveal": {
            "type": "boolean",
            "default": true,
            "description": "Whether to auto reveal the inspector when the couter editor is opened."
          },
          "ruleengine.ruleEditor.inspector.revealDelay": {
            "type": "number",
            "minimum": 0,
            "default": 200,
            "description": "Delay before auto opening inspector."
          },
          "ruleengine.ruleEditor.findFiles.excludeDirs": {
            "type": "string",
            "default": "node_modules, bower_components, jspm_packages, tmp, temp, .tmp, build, dist, .idea, .vscode",
            "description": "Defines folders to exclude, separated by commas."
          },
          "ruleengine.ruleEditor.findFiles.fileExtensions": {
            "type": "string",
            "default": "js, ts",
            "description": "Defines file extensions, separated by commas."
          },
          "ruleengine.ruleEditor.findFiles.maxResults": {
            "type": "number",
            "default": 50,
            "description": "Defines max search results."
          },
          "ruleengine.ruleEditor.scriptFiles.newFileExtension": {
            "type": "string",
            "default": "js",
            "description": "Defines the extension when creating a new script file."
          },
          "ruleengine.ruleEditor.scriptFiles.newFileNamingConvention": {
            "type": "string",
            "default": "kebab-case",
            "enum": [
              "kebab-case",
              "camelCase",
              "none"
            ]
          },
          "ruleengine.ruleEditor.scriptFiles.template.twoArgs": {
            "type": "string",
            "default": "module.exports = (context, next) => {\\n  next();\\n}\\n",
            "description": "Script file template with two arguments."
          },
          "ruleengine.ruleEditor.scriptFiles.template.threeArgs": {
            "type": "string",
            "default": "module.exports = (context, port, next) => {\\n  next();\\n}\\n",
            "description": "Script file template with three arguments."
          },
          "ruleengine.ruleEditor.scriptFiles.template.fourArgs": {
            "type": "string",
            "default": "module.exports = (context, port, props, next) => {\\n  next();\\n}\\n",
            "description": "Script file template with four arguments."
          },
          "ruleengine.ruleEditor.scriptFiles.template.fiveArgs": {
            "type": "string",
            "default": "module.exports = (err, context, port, props, next) => {\\n  next();\\n}\\n",
            "description": "Script file template with five arguments."
          }
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "ruleEngineExplorer",
          "title": "Rule Engine",
          "icon": "$(note)",
          "when": "activeCustomEditorId == ruleengine.ruleEditor"
        }
      ]
    },
    "views": {
      "ruleEngineExplorer": [
        {
          "type": "webview",
          "id": "ruleengine.inpsectorView",
          "name": "Inspector",
          "when": "activeCustomEditorId == ruleengine.ruleEditor"
        }
      ]
    },
    "customEditors": [
      {
        "viewType": "ruleengine.ruleEditor",
        "displayName": "Rule Engine",
        "selector": [
          {
            "filenamePattern": "*.rule"
          }
        ],
        "priority": "default"
      }
    ],
    "commands": [
      {
        "command": "ruleengine.ruleEditor.newFile",
        "title": "Rule Engine: Create New Rule Document"
      },
      {
        "command": "ruleengine.ruleEditor.newScriptFile",
        "title": "Rule Engine: New Script File"
      },
      {
        "command": "ruleengine.ruleEditor.addStep",
        "title": "Rule Engine: Add Step",
        "icon": "$(plus)"
      },
      {
        "command": "ruleengine.ruleEditor.zoomIn",
        "title": "Rule Engine: Zoom In",
        "icon": "$(zoom-in)"
      },
      {
        "command": "ruleengine.ruleEditor.zoomOut",
        "title": "Rule Engine: Zoom Out",
        "icon": "$(zoom-out)"
      },
      {
        "command": "ruleengine.ruleEditor.fitCanvas",
        "title": "Rule Engine: Fit Canvas",
        "icon": "$(move)"
      },
      {
        "command": "ruleengine.ruleEditor.delete",
        "title": "Rule Engine: Delete",
        "icon": "$(trash)"
      },
      {
        "command": "ruleengine.ruleEditor.zoom50",
        "title": "Rule Engine: Zoom 50%"
      },
      {
        "command": "ruleengine.ruleEditor.zoom100",
        "title": "Rule Engine: Zoom 100%"
      },
      {
        "command": "ruleengine.ruleEditor.zoom200",
        "title": "Rule Engine: Zoom 200%"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "ruleengine.ruleEditor.newScriptFile",
          "when": "activeCustomEditorId == ruleengine.ruleEditor"
        },
        {
          "command": "ruleengine.ruleEditor.addStep",
          "when": "activeCustomEditorId == ruleengine.ruleEditor"
        },
        {
          "command": "ruleengine.ruleEditor.zoomIn",
          "when": "activeCustomEditorId == ruleengine.ruleEditor"
        },
        {
          "command": "ruleengine.ruleEditor.zoomOut",
          "when": "activeCustomEditorId == ruleengine.ruleEditor"
        },
        {
          "command": "ruleengine.ruleEditor.zoom50",
          "when": "activeCustomEditorId == ruleengine.ruleEditor"
        },
        {
          "command": "ruleengine.ruleEditor.zoom100",
          "when": "activeCustomEditorId == ruleengine.ruleEditor"
        },
        {
          "command": "ruleengine.ruleEditor.zoom200",
          "when": "activeCustomEditorId == ruleengine.ruleEditor"
        },
        {
          "command": "ruleengine.ruleEditor.fitCanvas",
          "when": "activeCustomEditorId == ruleengine.ruleEditor"
        },
        {
          "command": "ruleengine.ruleEditor.delete",
          "when": "activeCustomEditorId == ruleengine.ruleEditor"
        }
      ],
      "editor/title": [
        {
          "command": "ruleengine.ruleEditor.addStep",
          "when": "activeCustomEditorId == ruleengine.ruleEditor",
          "group": "6_close@1"
        },
        {
          "command": "ruleengine.ruleEditor.zoomIn",
          "when": "activeCustomEditorId == ruleengine.ruleEditor",
          "group": "7_close@1"
        },
        {
          "command": "ruleengine.ruleEditor.zoomOut",
          "when": "activeCustomEditorId == ruleengine.ruleEditor",
          "group": "7_close@2"
        },
        {
          "command": "ruleengine.ruleEditor.fitCanvas",
          "when": "activeCustomEditorId == ruleengine.ruleEditor",
          "group": "7_close@3"
        },
        {
          "command": "ruleengine.ruleEditor.zoom50",
          "when": "activeCustomEditorId == ruleengine.ruleEditor",
          "group": "7_close@4"
        },
        {
          "command": "ruleengine.ruleEditor.zoom100",
          "when": "activeCustomEditorId == ruleengine.ruleEditor",
          "group": "7_close@5"
        },
        {
          "command": "ruleengine.ruleEditor.zoom200",
          "when": "activeCustomEditorId == ruleengine.ruleEditor",
          "group": "7_close@6"
        },
        {
          "command": "ruleengine.ruleEditor.delete",
          "when": "activeCustomEditorId == ruleengine.ruleEditor",
          "group": "8_close@1"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run build",
    "build": "npm run build-editor && npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "test-compile": "tsc -p ./",
    "test-watch": "tsc -watch -p ./",
    "pretest": "npm run test-compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "build-editor": "cd media/editor && npm run build && cd ../..",
    "deploy": "vsce publish --no-yarn",
    "postversion": "npm run push",
    "push": "git push origin master --tags",
    "vsix": "npx vsce package"
  },
  "dependencies": {
    "lodash.kebabcase": "4.1.1",
    "lodash.camelcase": "4.3.0",
    "worker-rpc": "0.2.0"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.0.0",
    "@types/node": "^16.11.13",
    "@types/vscode": "^1.63.0",
    "@typescript-eslint/eslint-plugin": "^5.7.0",
    "@typescript-eslint/parser": "^5.7.0",
    "@vscode/test-electron": "^2.0.0",
    "eslint": "^8.4.1",
    "glob": "^7.2.0",
    "mocha": "^9.1.3",
    "ts-loader": "^9.2.6",
    "typescript": "^4.5.4",
    "vsce": "^2.5.1",
    "webpack": "^5.65.0",
    "webpack-cli": "^4.9.1"
  }
}
